<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAAYNJREFUWEft
        li1Ww1AQhSMQiMrKCiQCgUBW4BCViApkF1CJQHQRCBbAEhBIBAJZgWABSAQCgUCEb95MIeG9/rzwxuU7
        556TztyZ3KZNm6qnx4u6rsdojhYFNLW13WDBDSrN3NbnweCBzruQH4qhS50NPKDUR5CjJ9QkLxQDsmTF
        wsqdYccAPYZtv+weCnMUyI5z+XkzHHcPhbF4IIHXqVDb7z5MLoEEahKq+Z2KPBFiUm+gaCBB6toO9IEi
        pK7tQLdAJZGdujrQB4qQnbo6UDYQ/UN0i57REsmf8sjaSej7BKI3QZ/B1eYdnZgtgl75QNSH6C040ryg
        fbO3oO4S6FzbG0leJeougZqedczM3oK6S6ALbW9kbPYW1F0CjdBHcKR5RQOzt6BePpBAb6aWiC90ZrYI
        ej6BBPqnSJ5x5GrJ7X6Pjq2dhL5foC7ITl0dyA5U4iH/r2Tniu2PsZim6nVHfuWHdtr1YNpDdzLhzLWd
        cjcYOEJXKHXZ/6uJnaanpzBV9Q0gPMRGzKn6gwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAAhRJREFUWEft
        ly12QjEQhREIBLJL6AK6gLouAFGBRFayAEQForILqKxEIFgCAlFRiahAICorKyrovcnAAZJJJo8gesp3
        zpxHXu4kQ34mea0L/4LNZnMDG8OmsAVsJTaHTWAj2LXIzwM66MCGsDXMyhI2gLWlmTqgwR7sA9aUd9it
        NHcaaIhTU4Mf2IM0Ww6c2zCuh9o8SxdlwPHJ+5+FspGCQ9/7nQ1On21NQdiFfdJLgQvUSkrLuvzug+jR
        yeO4+efTF5MwReTW4cB1qgEBc82Xk4bMROZAORXUUGTUMShtpJYiiwPBnddF4bzfi9SBciyoXTCEZf9a
        Rc/oqHzxGpVcUKXBkJHIQ1D55jVJtKCaBEMm4hKCSus5FQS1D+qswZC5uIWIwEo0KLwrCYasxDVEBCUc
        TBPBO0tK2GctriGoTCXEY4JgtqCuJKiFuIWg0pqFYwvYkhJiTMUlBJWvXpNE203WPHXMWOQhqORFLEVu
        azcJ6kakIajkwfrtZCEHQ4uytptiQWlLQV/QWyBK/SM3Qnz6osouKDyz7SWB6AqmHbCEXxoWGNTM/4zC
        O3pHuk0DYW4EatCT7mzAwbLjmqLvLA048W7ED7/a6IdpDjgzqJojxQ+H0z8a0QjXVGqh5+CR1Jfm6oAG
        ufu4hbU8FYN/gnf0rjRTHzYOY0bnVDLh7R/IvE/xksebJ6/Dtm194e/Sav0CX9ZEewKnaIMAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>